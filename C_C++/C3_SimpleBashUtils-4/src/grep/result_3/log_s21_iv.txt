../test.txt:The quick brown fox  jumps over the lazy dog.
../test.txt:1234567890
../test.txt:!@#$%^&*()_+[]{}|;:',.<>?/~`
../test.txt:Whitespace  test:
../test.txt:Line 1
../test.txt:
../test.txt:
../test.txt:Line 2
../test.txt:Line 3
../test.txt:
../test.txt:This is a new paragraph with multiple lines.
../test1.txt:This is a simple test file.
../test1.txt:Each line has a word or a phrase.
../test1.txt:grep is a powerful tool used for searching text.
../test1.txt:Testing options like -e, -i, -v, -c, and more.
../test1.txt:grep -i will ignore case sensitivity.
../test1.txt:The -v option inverts the search, showing lines that do not match.
../test1.txt:Let's test multiple options together.
../test1.txt:grep -e allows searching with a regular expression.
../test1.txt:Make sure the pattern matches words in the test file.
../test1.txt:Patterns like grep, test, and more are included in this file.
../test1.txt:Good luck testing your grep command with this file.
../test2.txt:
../test2.txt:
../test2.txt:
../test2.txt:Whitespace   test:
../test2.txt:Row A
../test2.txt:
../test2.txt:
../test2.txt:Row B
../test2.txt:Row C
../test2.txt:
../test2.txt:This paragraph also spans multiple lines.
../test2.txt:
../test2.txt:
../test2.txt:Bu yana bir test fayli 
../test2.txt:
../test2.txt:This is another test file.
../test2.txt:Some lines contain grep-related test cases.
../test2.txt:grep can match words, phrases, or patterns.
../test2.txt:Experimenting with flags like -n, -l, -o, and -h.
../test2.txt:grep -o will extract only the matched pattern.
../test2.txt:By applying -v, we can exclude certain matches.
../test2.txt:Patterns such as another, test, and grep are included.
../test2.txt:The -e flag lets you specify multiple patterns.
../test2.txt:This file is created for testing and learning grep.
../test2.txt:
../test2.txt:Bu text2 fayli 
../test2.txt:
../test2.txt:Happy testing with your grep commands!
